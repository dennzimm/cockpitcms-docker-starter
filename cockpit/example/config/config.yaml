debug: true
# Cockpit settings
app.name: Cockpit Docker Example
# cockpit session name
session.name: cockpit-docker_local
# base url
base_url: http://localhost:8088
site_url: /
# use cockpit url for having resulting paths with domain (e.g. image styles)
# site_url: http://localhost:8088
base_route: /
#thumbs.url: http://localhost:8088
#assets.url: http://cockpit-example.docker.localhost/

# define globally site language, otherwise will get from the user
i18n: de

# define the languages you want to manage
languages:
  de: Deutsch
  en: English

# unique slugs Addon
unique.slugs:
  slug.name: slug
  collections:
    page: title
    post: title
    subpage: title

# disabled layout components
components.disabled:
  image: true
  section: true
  html: true
  gallery: true

# define additional groups
groups:
  # admin:
  #   $admin: true
  api:
    $admin: false
    cockpit:
      backend: false
      finder: false
    BackupAndRestore:
      manage.create: true
  author:
    $admin: false
    $vars:
      finder.path: /upload
      finder.allowed_uploads: pdf, png, jpg
      assets.allowed_uploads: png, jpg
    BackupAndRestore:
      manage.view: true
      manage.download: true
    cockpit:
      backend: true
      finder: true
    imagestyles:
      manage.view: true
      manage.admin: false

# use mongodb as main data storage
#database:
#    server: mongodb://localhost:27017
#    options:
#        db: cockpitdb

# use smtp to send emails
#mailer:
#    from      : pauloamgomes@gmail.com
#    transport : smtp
#    host      : cockpit-react-mailhog
#    user      : username
#    password  : xxpasswordxx,
#    port      : 1025,
#    auth      : true,
#    encryption: '' # '', 'ssl' or 'tls'

# Set cors settings
cors:
  # Specify allowed headers, e.g. 'x-allowed-header'.
  allowedHeaders: 'X-Requested-With, Content-Type, Origin, Cache-Control, Pragma, Authorization, Accept, Accept-Encoding'
  # Specify allowed request methods, use ['*'] to allow all.
  allowedMethods: 'PUT, POST, GET, OPTIONS, DELETE'
  # Configure requests allowed from specific origins, use ['*'] to allow all.
  allowedOrigins: 'http://site.com'
  # Sets the Access-Control-Max-Age header.
  maxAge: 500
  # Sets the Access-Control-Allow-Credentials header.
  allowCredentials: true
  # Sets the Access-Control-Expose-Headers header.
  exposedHeaders: true
